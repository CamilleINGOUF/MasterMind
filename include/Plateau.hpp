#ifndef PLATEAU_HPP_
#define PLATEAU_HPP_
#include <vector>
#include "Combinaison.hpp"

//////////////////////////////////////////////////////////////////
/// \brief La classe Plateau permet d'afficher l'état du jeu en cours
/// \file      Plateau.hpp
/// \author    Axel segard
/// \version   1.0
/// \date 1 juin 2017
//////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////
/// \brief La classe Plateau permet d'afficher l'état du jeu en cours
///////////////////////////////////////////////////////////////////
class Plateau
{
private:
//////////////////////////////////////////////////////////
/// \brief parametre permettant de récupéré une combinaison de couleur
//////////////////////////////////////////////////////////
  std::vector<Combinaison> _combinaisons;
public:
////////////////////////////////////////////////////////////
/// \brief Constructeur de Plateau
////////////////////////////////////////////////////////////
  Plateau();
  Plateau(std::vector<Combinaison>);
  
////////////////////////////////////////////////////////////
/// \brief Destructeur de Plateau
////////////////////////////////////////////////////////////
  ~Plateau();

//////////////////////////////////////////////////////////
/// \brief Accesseurs pour récupérer une combinaison
/// \return Vecteur de combinaisons
//////////////////////////////////////////////////////////  
  std::vector<Combinaison> getCombinaisons() const;

//////////////////////////////////////////////////////////
/// \brief Accesseurs pour changer les combinaisons du plateau
/// \param combinaisons vecteur de combinaison
//////////////////////////////////////////////////////////  
  void setCombinaisons(const std::vector<Combinaison> combinaisons);

//////////////////////////////////////////////////////////
/// \brief Récupère la dernière combinaison jouée
/// \return Combinaison de couleur
//////////////////////////////////////////////////////////  
  Combinaison getLastCombinaison() const;

//////////////////////////////////////////////////////////
/// \brief Accesseurs pour ajouter une combinaison sur le plateau
/// \param combinaison combinaison de couleur
/// \note Combinaison : r j v B pour rouge, jaune, vert, Blanc
////////////////////////////////////////////////////////// 
  void addCombinaison(const Combinaison combinaison);
};

////////////////////////////////////////////////////////////
/// \brief Cet opérateur permet d'écrire un plateau
/// \param p Le plateau qui sera utilisé
/// \param os flux de sortie
////////////////////////////////////////////////////////////
std::ostream & operator<<(std::ostream & os, const Plateau & p);

////////////////////////////////////////////////////////////
/// \brief Cet opérateur permet de lire un plateau
/// \param p Le plateau qui sera utilisé
/// \param is flux d'entrée
////////////////////////////////////////////////////////////
std::istream & operator>>(std::istream & is,  Plateau & p);

#endif
