////////////////////////////////////////////////////////////
//
// Mastermind
// Copyright (C) 2017 - CAFA
//
////////////////////////////////////////////////////////////


#ifndef CLIENT_HPP_
#define CLIENT_HPP_

////////////////////////////////////////////////////////////
/// Headers
////////////////////////////////////////////////////////////
#include <SFML/Network.hpp>
#include <memory>
#include <string>


typedef std::unique_ptr<sf::TcpSocket> PtrSocket;


////////////////////////////////////////////////////////////
/// \brief Partie client du mastermind
///
////////////////////////////////////////////////////////////
class Client
{
public:
  ////////////////////////////////////////////////////////////
  /// \brief Constructeur d'un client
  ///
  ////////////////////////////////////////////////////////////
  Client();

  ////////////////////////////////////////////////////////////
  /// \brief Destructeur du client
  ///
  ////////////////////////////////////////////////////////////
  ~Client();

  ////////////////////////////////////////////////////////////
  /// \brief Lancement du client
  ///
  ////////////////////////////////////////////////////////////
  void run();
  
private:

  ////////////////////////////////////////////////////////////
  /// \brief Récupère les données pour rejoindre une partie
  ///
  ////////////////////////////////////////////////////////////
  void priv_getSettings();

  ////////////////////////////////////////////////////////////
  /// \brief Phase d'initialisation du jeu entre le client et le
  /// serveur
  ///
  ////////////////////////////////////////////////////////////
  void priv_initClient();

  ////////////////////////////////////////////////////////////
  /// \brief Boucle principale du client
  ///
  ////////////////////////////////////////////////////////////
  void priv_mainLoop();

  ////////////////////////////////////////////////////////////
  /// \brief Gestion des paquets
  ///
  /// \param packetType le type du paquet (cf. protocol.hpp)
  /// \param packet les données
  ///
  //////////////////////////////////////////////////////////// 
  void priv_handlePacket(sf::Int32 packetType, sf::Packet& packet);
  
  ////////////////////////////////////////////////////////////
  /// Données membres
  ////////////////////////////////////////////////////////////
  PtrSocket   _pSocket;    ///< Lien entre le serveur et le client
  std::string _nameClient; ///< Le pseudo du client
  std::string _nameHost;   ///< Le pseudo de l'hôte
  std::string _serverIP;   ///< L'adresse du serveur
  unsigned    _port;       ///< Le port du serveur
  bool        _endOfGame;  ///< Flag de la boucle principale
  
};

#endif // CLIENT_HPP_
