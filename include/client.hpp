////////////////////////////////////////////////////////////
//
// Mastermind
// Copyright (C) 2017 - CAFA
//
////////////////////////////////////////////////////////////


#ifndef CLIENT_HPP_
#define CLIENT_HPP_

////////////////////////////////////////////////////////////
/// Headers
////////////////////////////////////////////////////////////
#include <SFML/Network.hpp>
#include <memory>
#include <string>

typedef std::unique_ptr<sf::TcpSocket> PtrSocket;
typedef std::unique_ptr<sf::TcpListener> PtrListener;


////////////////////////////////////////////////////////////
/// \brief Représente un joueur
///
////////////////////////////////////////////////////////////
class Client
{
public:
  ////////////////////////////////////////////////////////////
  /// \brief Constructeur d'un client
  ///
  ////////////////////////////////////////////////////////////
  Client();

  ////////////////////////////////////////////////////////////
  /// \brief Destructeur du client
  ///
  ////////////////////////////////////////////////////////////
  ~Client();

  ////////////////////////////////////////////////////////////
  /// \brief Lancement du client
  ///
  ////////////////////////////////////////////////////////////
  void run();
  
private:

  ////////////////////////////////////////////////////////////
  /// Données membres
  ////////////////////////////////////////////////////////////
  PtrSocket _pSocket;
  PtrListener _pListener;
  std::string _nameClient;
  
};

#endif
